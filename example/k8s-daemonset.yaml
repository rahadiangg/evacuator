apiVersion: v1
kind: ServiceAccount
metadata:
  name: evacuator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: evacuator
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "delete"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "replicasets", "deployments"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: evacuator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: evacuator
subjects:
- kind: ServiceAccount
  name: evacuator
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: evacuator-config
  namespace: kube-system
data:
  config.yaml: |
    node_name: ""

    provider:
      name: ""
      auto_detect: true
      poll_interval: "3s"
      request_timeout: "2s"
      dummy:
        enabled: false
        detection_wait: "10s"

    handler:
      processing_timeout: "75s"
      kubernetes:
        enabled: true
        skip_daemon_sets: true
        delete_empty_dir_data: true
        kubeconfig: ""
        in_cluster: true

      telegram:
        enabled: false
        bot_token: 
        chat_id: 

    log:
      level: "debug"
      format: "text"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: evacuator
  namespace: kube-system
  labels:
    app: evacuator
spec:
  selector:
    matchLabels:
      app: evacuator
  template:
    metadata:
      labels:
        app: evacuator
    spec:
      serviceAccountName: evacuator
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: evacuator
        image: rahadiangg/evacuator-nightly:nightly
        args: ["./evacuator", "-config=/etc/evacuator/config.yaml"]
        imagePullPolicy: Always
        env:
        #Pass the node name to the pod so it knows which node it's monitoring
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: config
          mountPath: /etc/evacuator
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: evacuator-config