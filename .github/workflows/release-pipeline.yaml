name: release-pipeline

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'  # Matches v1.0.0, v1.2.3, v1.0.0-alpha, etc.

permissions:
  contents: write  # Changed to write for creating releases

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Extract version from tag
        id: extract-version
        run: |
          # Remove 'v' prefix from tag to get version (e.g., v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          go build -ldflags="-s -w" -o dist/evacuator ./cmd/evacuator

      - name: Create zip archive
        run: |
          cd dist
          zip evacuator-v${{ steps.extract-version.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip evacuator

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: evacuator-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/evacuator-v${{ steps.extract-version.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip

  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract-version
        run: |
          # Remove 'v' prefix from tag to get version (e.g., v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            rahadiangg/evacuator:${{ steps.extract-version.outputs.version }}
            rahadiangg/evacuator:latest

  create-release:
    runs-on: ubuntu-latest
    needs: [build-binaries, docker-build-and-push]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract-version
        run: |
          # Remove 'v' prefix from tag to get version (e.g., v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Organize release assets
        run: |
          mkdir -p dist
          find release-assets -name "*.zip" -exec cp {} dist/ \;
          ls -la dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: dist/*.zip
